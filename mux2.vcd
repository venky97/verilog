$date
	Tue Sep 12 14:54:23 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_32bit2to1mux $end
$var wire 32 ! out [31:0] $end
$var reg 32 " INP1 [31:0] $end
$var reg 32 # INP2 [31:0] $end
$var reg 1 $ SEL $end
$scope module M1 $end
$var wire 32 % in1 [31:0] $end
$var wire 32 & in2 [31:0] $end
$var wire 1 $ sel $end
$var wire 32 ' out [31:0] $end
$scope begin mux_loop[0] $end
$scope module m1 $end
$var wire 8 ( in1 [7:0] $end
$var wire 8 ) in2 [7:0] $end
$var wire 1 $ sel $end
$var wire 8 * out [7:0] $end
$scope begin mux_loop[0] $end
$scope module m1 $end
$var wire 1 + a1 $end
$var wire 1 , a2 $end
$var wire 1 - in1 $end
$var wire 1 . in2 $end
$var wire 1 / not_sel $end
$var wire 1 0 out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module m1 $end
$var wire 1 1 a1 $end
$var wire 1 2 a2 $end
$var wire 1 3 in1 $end
$var wire 1 4 in2 $end
$var wire 1 5 not_sel $end
$var wire 1 6 out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module m1 $end
$var wire 1 7 a1 $end
$var wire 1 8 a2 $end
$var wire 1 9 in1 $end
$var wire 1 : in2 $end
$var wire 1 ; not_sel $end
$var wire 1 < out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module m1 $end
$var wire 1 = a1 $end
$var wire 1 > a2 $end
$var wire 1 ? in1 $end
$var wire 1 @ in2 $end
$var wire 1 A not_sel $end
$var wire 1 B out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[4] $end
$scope module m1 $end
$var wire 1 C a1 $end
$var wire 1 D a2 $end
$var wire 1 E in1 $end
$var wire 1 F in2 $end
$var wire 1 G not_sel $end
$var wire 1 H out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[5] $end
$scope module m1 $end
$var wire 1 I a1 $end
$var wire 1 J a2 $end
$var wire 1 K in1 $end
$var wire 1 L in2 $end
$var wire 1 M not_sel $end
$var wire 1 N out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[6] $end
$scope module m1 $end
$var wire 1 O a1 $end
$var wire 1 P a2 $end
$var wire 1 Q in1 $end
$var wire 1 R in2 $end
$var wire 1 S not_sel $end
$var wire 1 T out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[7] $end
$scope module m1 $end
$var wire 1 U a1 $end
$var wire 1 V a2 $end
$var wire 1 W in1 $end
$var wire 1 X in2 $end
$var wire 1 Y not_sel $end
$var wire 1 Z out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module m1 $end
$var wire 8 [ in1 [7:0] $end
$var wire 8 \ in2 [7:0] $end
$var wire 1 $ sel $end
$var wire 8 ] out [7:0] $end
$scope begin mux_loop[0] $end
$scope module m1 $end
$var wire 1 ^ a1 $end
$var wire 1 _ a2 $end
$var wire 1 ` in1 $end
$var wire 1 a in2 $end
$var wire 1 b not_sel $end
$var wire 1 c out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module m1 $end
$var wire 1 d a1 $end
$var wire 1 e a2 $end
$var wire 1 f in1 $end
$var wire 1 g in2 $end
$var wire 1 h not_sel $end
$var wire 1 i out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module m1 $end
$var wire 1 j a1 $end
$var wire 1 k a2 $end
$var wire 1 l in1 $end
$var wire 1 m in2 $end
$var wire 1 n not_sel $end
$var wire 1 o out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module m1 $end
$var wire 1 p a1 $end
$var wire 1 q a2 $end
$var wire 1 r in1 $end
$var wire 1 s in2 $end
$var wire 1 t not_sel $end
$var wire 1 u out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[4] $end
$scope module m1 $end
$var wire 1 v a1 $end
$var wire 1 w a2 $end
$var wire 1 x in1 $end
$var wire 1 y in2 $end
$var wire 1 z not_sel $end
$var wire 1 { out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[5] $end
$scope module m1 $end
$var wire 1 | a1 $end
$var wire 1 } a2 $end
$var wire 1 ~ in1 $end
$var wire 1 !" in2 $end
$var wire 1 "" not_sel $end
$var wire 1 #" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[6] $end
$scope module m1 $end
$var wire 1 $" a1 $end
$var wire 1 %" a2 $end
$var wire 1 &" in1 $end
$var wire 1 '" in2 $end
$var wire 1 (" not_sel $end
$var wire 1 )" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[7] $end
$scope module m1 $end
$var wire 1 *" a1 $end
$var wire 1 +" a2 $end
$var wire 1 ," in1 $end
$var wire 1 -" in2 $end
$var wire 1 ." not_sel $end
$var wire 1 /" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module m1 $end
$var wire 8 0" in1 [7:0] $end
$var wire 8 1" in2 [7:0] $end
$var wire 1 $ sel $end
$var wire 8 2" out [7:0] $end
$scope begin mux_loop[0] $end
$scope module m1 $end
$var wire 1 3" a1 $end
$var wire 1 4" a2 $end
$var wire 1 5" in1 $end
$var wire 1 6" in2 $end
$var wire 1 7" not_sel $end
$var wire 1 8" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module m1 $end
$var wire 1 9" a1 $end
$var wire 1 :" a2 $end
$var wire 1 ;" in1 $end
$var wire 1 <" in2 $end
$var wire 1 =" not_sel $end
$var wire 1 >" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module m1 $end
$var wire 1 ?" a1 $end
$var wire 1 @" a2 $end
$var wire 1 A" in1 $end
$var wire 1 B" in2 $end
$var wire 1 C" not_sel $end
$var wire 1 D" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module m1 $end
$var wire 1 E" a1 $end
$var wire 1 F" a2 $end
$var wire 1 G" in1 $end
$var wire 1 H" in2 $end
$var wire 1 I" not_sel $end
$var wire 1 J" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[4] $end
$scope module m1 $end
$var wire 1 K" a1 $end
$var wire 1 L" a2 $end
$var wire 1 M" in1 $end
$var wire 1 N" in2 $end
$var wire 1 O" not_sel $end
$var wire 1 P" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[5] $end
$scope module m1 $end
$var wire 1 Q" a1 $end
$var wire 1 R" a2 $end
$var wire 1 S" in1 $end
$var wire 1 T" in2 $end
$var wire 1 U" not_sel $end
$var wire 1 V" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[6] $end
$scope module m1 $end
$var wire 1 W" a1 $end
$var wire 1 X" a2 $end
$var wire 1 Y" in1 $end
$var wire 1 Z" in2 $end
$var wire 1 [" not_sel $end
$var wire 1 \" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[7] $end
$scope module m1 $end
$var wire 1 ]" a1 $end
$var wire 1 ^" a2 $end
$var wire 1 _" in1 $end
$var wire 1 `" in2 $end
$var wire 1 a" not_sel $end
$var wire 1 b" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module m1 $end
$var wire 8 c" in1 [7:0] $end
$var wire 8 d" in2 [7:0] $end
$var wire 1 $ sel $end
$var wire 8 e" out [7:0] $end
$scope begin mux_loop[0] $end
$scope module m1 $end
$var wire 1 f" a1 $end
$var wire 1 g" a2 $end
$var wire 1 h" in1 $end
$var wire 1 i" in2 $end
$var wire 1 j" not_sel $end
$var wire 1 k" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[1] $end
$scope module m1 $end
$var wire 1 l" a1 $end
$var wire 1 m" a2 $end
$var wire 1 n" in1 $end
$var wire 1 o" in2 $end
$var wire 1 p" not_sel $end
$var wire 1 q" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[2] $end
$scope module m1 $end
$var wire 1 r" a1 $end
$var wire 1 s" a2 $end
$var wire 1 t" in1 $end
$var wire 1 u" in2 $end
$var wire 1 v" not_sel $end
$var wire 1 w" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[3] $end
$scope module m1 $end
$var wire 1 x" a1 $end
$var wire 1 y" a2 $end
$var wire 1 z" in1 $end
$var wire 1 {" in2 $end
$var wire 1 |" not_sel $end
$var wire 1 }" out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[4] $end
$scope module m1 $end
$var wire 1 ~" a1 $end
$var wire 1 !# a2 $end
$var wire 1 "# in1 $end
$var wire 1 ## in2 $end
$var wire 1 $# not_sel $end
$var wire 1 %# out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[5] $end
$scope module m1 $end
$var wire 1 &# a1 $end
$var wire 1 '# a2 $end
$var wire 1 (# in1 $end
$var wire 1 )# in2 $end
$var wire 1 *# not_sel $end
$var wire 1 +# out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[6] $end
$scope module m1 $end
$var wire 1 ,# a1 $end
$var wire 1 -# a2 $end
$var wire 1 .# in1 $end
$var wire 1 /# in2 $end
$var wire 1 0# not_sel $end
$var wire 1 1# out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$scope begin mux_loop[7] $end
$scope module m1 $end
$var wire 1 2# a1 $end
$var wire 1 3# a2 $end
$var wire 1 4# in1 $end
$var wire 1 5# in2 $end
$var wire 1 6# not_sel $end
$var wire 1 7# out $end
$var wire 1 $ sel $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
17#
16#
05#
14#
13#
02#
01#
10#
1/#
0.#
0-#
0,#
1+#
1*#
0)#
1(#
1'#
0&#
0%#
1$#
1##
0"#
0!#
0~"
1}"
1|"
0{"
1z"
1y"
0x"
0w"
1v"
1u"
0t"
0s"
0r"
1q"
1p"
0o"
1n"
1m"
0l"
0k"
1j"
1i"
0h"
0g"
0f"
b10101010 e"
b1010101 d"
b10101010 c"
1b"
1a"
0`"
1_"
1^"
0]"
0\"
1["
1Z"
0Y"
0X"
0W"
1V"
1U"
0T"
1S"
1R"
0Q"
0P"
1O"
1N"
0M"
0L"
0K"
1J"
1I"
0H"
1G"
1F"
0E"
0D"
1C"
1B"
0A"
0@"
0?"
1>"
1="
0<"
1;"
1:"
09"
08"
17"
16"
05"
04"
03"
b10101010 2"
b1010101 1"
b10101010 0"
1/"
1."
0-"
1,"
1+"
0*"
0)"
1("
1'"
0&"
0%"
0$"
1#"
1""
0!"
1~
1}
0|
0{
1z
1y
0x
0w
0v
1u
1t
0s
1r
1q
0p
0o
1n
1m
0l
0k
0j
1i
1h
0g
1f
1e
0d
0c
1b
1a
0`
0_
0^
b10101010 ]
b1010101 \
b10101010 [
0Z
1Y
1X
0W
0V
0U
1T
1S
0R
1Q
1P
0O
0N
1M
1L
0K
0J
0I
1H
1G
0F
1E
1D
0C
0B
1A
1@
0?
0>
0=
1<
1;
0:
19
18
07
06
15
14
03
02
01
10
1/
0.
1-
1,
0+
b1010101 *
b10101010 )
b1010101 (
b10101010101010101010101001010101 '
b1010101010101010101010110101010 &
b10101010101010101010101001010101 %
0$
b1010101010101010101010110101010 #
b10101010101010101010101001010101 "
b10101010101010101010101001010101 !
$end
#100
00
0<
0H
0T
0i
0u
0#"
0/"
0>"
0J"
0V"
0b"
0q"
0}"
0+#
07#
0,
16
08
1B
0D
1N
0P
b10101010 *
1Z
1c
0e
1o
0q
1{
0}
b1010101 ]
1)"
0+"
18"
0:"
1D"
0F"
1P"
0R"
b1010101 2"
1\"
0^"
1k"
0m"
1w"
0y"
1%#
0'#
b1010101010101010101010110101010 !
b1010101010101010101010110101010 '
b1010101 e"
11#
03#
0/
05
11
0;
0A
1=
0G
0M
1I
0S
0Y
1U
0b
1^
0h
0n
1j
0t
0z
1v
0""
0("
1$"
0."
07"
13"
0="
0C"
1?"
0I"
0O"
1K"
0U"
0["
1W"
0a"
0j"
1f"
0p"
0v"
1r"
0|"
0$#
1~"
0*#
00#
1,#
06#
1$
#1100
