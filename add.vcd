$date
	Tue Sep 12 16:03:15 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_add $end
$var wire 1 ! cout $end
$var wire 8 " OUT [7:0] $end
$var reg 8 # IN1 [7:0] $end
$var reg 8 $ IN2 [7:0] $end
$var reg 1 % bi $end
$var reg 1 & cin $end
$scope module a1 $end
$var wire 1 % bi $end
$var wire 1 & cin $end
$var wire 8 ' in1 [7:0] $end
$var wire 8 ( in2 [7:0] $end
$var wire 8 ) z [7:0] $end
$var wire 8 * t [7:0] $end
$var wire 8 + r [7:0] $end
$var wire 8 , out [7:0] $end
$var wire 1 ! cout $end
$var wire 1 - as $end
$scope begin add_loop[1] $end
$scope module m1 $end
$var wire 1 . Cin $end
$var wire 1 / In1 $end
$var wire 1 0 In2 $end
$var wire 1 1 Sum $end
$var wire 1 2 Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[2] $end
$scope module m1 $end
$var wire 1 3 Cin $end
$var wire 1 4 In1 $end
$var wire 1 5 In2 $end
$var wire 1 6 Sum $end
$var wire 1 7 Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[3] $end
$scope module m1 $end
$var wire 1 8 Cin $end
$var wire 1 9 In1 $end
$var wire 1 : In2 $end
$var wire 1 ; Sum $end
$var wire 1 < Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[4] $end
$scope module m1 $end
$var wire 1 = Cin $end
$var wire 1 > In1 $end
$var wire 1 ? In2 $end
$var wire 1 @ Sum $end
$var wire 1 A Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[5] $end
$scope module m1 $end
$var wire 1 B Cin $end
$var wire 1 C In1 $end
$var wire 1 D In2 $end
$var wire 1 E Sum $end
$var wire 1 F Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[6] $end
$scope module m1 $end
$var wire 1 G Cin $end
$var wire 1 H In1 $end
$var wire 1 I In2 $end
$var wire 1 J Sum $end
$var wire 1 K Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[7] $end
$scope module m1 $end
$var wire 1 L Cin $end
$var wire 1 M In1 $end
$var wire 1 N In2 $end
$var wire 1 O Sum $end
$var wire 1 P Cout $end
$upscope $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope module a1 $end
$var wire 1 Q cin $end
$var wire 1 - cout $end
$var wire 8 R in1 [7:0] $end
$var wire 8 S in2 [7:0] $end
$var wire 8 T out [7:0] $end
$scope begin add_loop[1] $end
$scope module m1 $end
$var wire 1 U In1 $end
$var wire 1 V In2 $end
$var wire 1 W Sum $end
$var wire 1 X Cout $end
$var wire 1 Y Cin $end
$upscope $end
$upscope $end
$scope begin add_loop[2] $end
$scope module m1 $end
$var wire 1 X Cin $end
$var wire 1 Z In1 $end
$var wire 1 [ In2 $end
$var wire 1 \ Sum $end
$var wire 1 ] Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[3] $end
$scope module m1 $end
$var wire 1 ] Cin $end
$var wire 1 ^ In1 $end
$var wire 1 _ In2 $end
$var wire 1 ` Sum $end
$var wire 1 a Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[4] $end
$scope module m1 $end
$var wire 1 a Cin $end
$var wire 1 b In1 $end
$var wire 1 c In2 $end
$var wire 1 d Sum $end
$var wire 1 e Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[5] $end
$scope module m1 $end
$var wire 1 e Cin $end
$var wire 1 f In1 $end
$var wire 1 g In2 $end
$var wire 1 h Sum $end
$var wire 1 i Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[6] $end
$scope module m1 $end
$var wire 1 i Cin $end
$var wire 1 j In1 $end
$var wire 1 k In2 $end
$var wire 1 l Sum $end
$var wire 1 m Cout $end
$upscope $end
$upscope $end
$scope begin add_loop[7] $end
$scope module m1 $end
$var wire 1 m Cin $end
$var wire 1 n In1 $end
$var wire 1 o In2 $end
$var wire 1 p Sum $end
$var wire 1 q Cout $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 Q Cin $end
$var wire 1 r In1 $end
$var wire 1 s In2 $end
$var wire 1 t Sum $end
$var wire 1 Y Cout $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 & Cin $end
$var wire 1 u In1 $end
$var wire 1 v In2 $end
$var wire 1 w Sum $end
$var wire 1 x Cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1x
0w
0v
1u
xt
1s
zr
xq
xp
0o
0n
xm
xl
0k
1j
xi
xh
0g
0f
xe
xd
0c
1b
xa
x`
0_
1^
x]
x\
0[
0Z
xY
xX
xW
0V
1U
bx T
b1 S
b101101z R
0Q
xP
xO
xN
1M
xL
xK
xJ
xI
0H
xG
xF
xE
xD
1C
xB
xA
x@
x?
0>
x=
x<
x;
x:
09
x8
x7
x6
x5
14
x3
x2
x1
x0
0/
1.
x-
bx0 ,
bx +
bx1 *
b101101z )
b1011010 (
b10100101 '
1&
0%
b1011010 $
b10100101 #
bx0 "
x!
$end
#100
1n
0j
1f
0b
0^
1Z
0U
b1010010z )
b1010010z R
1%
#500
